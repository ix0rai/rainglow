plugins {
    id "fabric-loom" version "1.6.+"
    id "com.github.johnrengelman.shadow" version "7.1.+"
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url = "https://maven.gegy.dev/" }
    maven { url = "https://maven.terraformersmc.com/releases/" }
    maven { url = "https://maven.quiltmc.org/repository/release/" }
    maven { url = "https://repo.sleeping.town/" }

    flatDir { dirs 'lib' }
}

configurations {
    shadow
    api.extendsFrom shadow
}

dependencies {
    // versions defined in gradle.properties
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("org.quiltmc:quilt-mappings:${project.minecraft_version}+build.${project.quilt_mappings}:intermediary-v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

    modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}")
    implementation("folk.sisby:kaleido-config:0.3.1+1.3.1")
    include("folk.sisby:kaleido-config:0.3.1+1.3.1")

    Set<String> apiModules = [
            "fabric-networking-api-v1",
            "fabric-resource-loader-v0",
            "fabric-screen-api-v1",
            "fabric-key-binding-api-v1",
            "fabric-lifecycle-events-v1",
    ]

    apiModules.forEach {
        include(modImplementation(fabricApi.module(it, project.fabric_api_version)))
    }
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

loom {
    accessWidenerPath = file("src/main/resources/rainglow.accesswidener")
}

//modrinth {
//    syncBodyFrom = rootProject.file("README.md").text
//    changelog = rootProject.file("CHANGELOG.md").text
//    System.out.println("Enter your Modrinth API key: ")
//    BufferedReader br = new BufferedReader(new InputStreamReader(System.in))
//    token = br.readLine()
//    projectId = "rainglow"
//    versionNumber = project.version
//    versionName = "rainglow " + project.version.toString().split("\\+")[0] + " for mc " + project.version.toString().split("\\+mc")[1]
//    versionType = "release"
//    uploadFile = remapJar
//    gameVersions = ["1.19", "1.19.1", "1.19.2"]
//    loaders = ["quilt", "fabric"]
//    dependencies {
//        optional.project "modmenu"
//    }
//
//    // sync readme
//    tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
//}

def targetJavaVersion = Integer.parseInt(project.java_version)
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = targetJavaVersion
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
